import React, { useEffect, useState } from "react";
import { BrowserRouter, Routes, Route } from "react-router-dom";
import { AuthProvider, useAuth } from "./context/AuthContext";
import { NotificationProvider } from "./context/NotificationContext"; // –∏–ª–∏ .jsx ‚Äî –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
// ‚úÖ –î–æ–±–∞–≤—å —ç—Ç–æ—Ç –∏–º–ø–æ—Ä—Ç:
import { useNotifications } from "./context/NotificationContext";
import { listenToForegroundMessages } from "./api/firebase";

import { ProtectedRoute } from "./components/ProtectedRoute";
import { requestPermissionAndToken } from "./api/firebase";
import { notifyAPI } from "./api/notify";

import Home from './pages/Home';
import Header from './components/Header';
import Footer from './components/Footer';
import Login from "./pages/Login";
import Profile from "./pages/Profile";
import EditProfile from "./pages/EditProfile";
import News from "./pages/News";
import Register from './pages/Registration';
import CreateNews from './pages/CreateNews';
import Friends from './pages/Friends';
import UserFeed from './pages/UserFeed';

// üîπ –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å –ª–æ–≥–∏–∫–æ–π
const AppContent = () => {
  console.log('Inside AppContent'); // ‚úÖ –î–æ–ª–∂–µ–Ω —Å—Ä–∞–±–æ—Ç–∞—Ç—å
  const { userData } = useAuth(); // ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ ‚Äî –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  const { addNotification, loadNotifications } = useNotifications(); // ‚úÖ –¢–∞–∫–∂–µ –≤–µ—Ä–Ω–æ
  const [firebaseRegistered, setFirebaseRegistered] = React.useState(
    () => localStorage.getItem("firebaseRegistered") === "true"
  );

  useEffect(() => {
    if (userData) {
      loadNotifications();
    }
  }, [userData]);


  useEffect(() => {
      const initNotifications = async () => {
        if (!userData || firebaseRegistered) return;

       const token = await requestPermissionAndToken();
       if (token) {
         try {
           const response = await notifyAPI.connectToFirebase(token);
           console.log("‚úÖ –¢–æ–∫–µ–Ω –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä:", response);
          // –ø–æ–º–µ—á–∞–µ–º, —á—Ç–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞
           localStorage.setItem("firebaseRegistered", "true");
           localStorage.getItem("firebaseRegistered");
           setFirebaseRegistered(true);
           listenToForegroundMessages(addNotification);
         } catch (error) {
           if (error.response?.data?.detail?.includes("already stored")) {
            localStorage.setItem("firebaseRegistered", "true");
            setFirebaseRegistered(true);
            listenToForegroundMessages(addNotification);
          } else {
            console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–æ–∫–µ–Ω–∞:", error.message);
           }
         }
       }
     };
     initNotifications();;
  }, [addNotification, userData, firebaseRegistered]);              //–ï—Å–ª–∏ –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —É–±—Ä–∞—Ç—å –∏–∑ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π —Å–∫–æ–±–æ–∫

  return (
    <>
      <Header />
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/login" element={<Login />} />
        <Route path="/registration" element={<Register />} />

        <Route
          path="/profile"
          element={
            <ProtectedRoute>
              <Profile />
            </ProtectedRoute>
          }
        />

        <Route
          path="/profile/edit"
          element={
            <ProtectedRoute>
              <EditProfile />
            </ProtectedRoute>
          }
        />

        <Route
          path="/news"
          element={
            <ProtectedRoute>
              <News />
            </ProtectedRoute>
          }
        />

        <Route
          path="/users"
          element={
            <ProtectedRoute>
              <UserFeed />
            </ProtectedRoute>
          }
        />

        <Route
          path="/news/create_news"
          element={
            <ProtectedRoute>
              <CreateNews />
            </ProtectedRoute>
          }
        />

        <Route
          path="/friends"
          element={
            <ProtectedRoute>
              <Friends />
            </ProtectedRoute>
          }
        />
      </Routes>
      <Footer companyName="Friendly" />
    </>
  );
};

function App() {
  return (
    <div className="d-flex flex-column min-vh-100">
      <AuthProvider>
        <BrowserRouter>
          <NotificationProvider>
            <AppContent />
          </NotificationProvider>
        </BrowserRouter>
      </AuthProvider>
    </div>
  );
}

export default App;